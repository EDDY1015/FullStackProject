- name: Configure EC2 for Ethereum & Kubernetes
  hosts: all
  become: true
  gather_facts: false

  pre_tasks:
    - name: Wait 10 seconds before connecting (instance stabilization)
      pause:
        seconds: 10

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Run Ethereum Geth Node in Docker
      community.docker.docker_container:
        name: ethereum-node
        image: ethereum/client-go
        state: started
        restart_policy: always
        published_ports:
          - "8545:8545"
          - "30303:30303"
        command: '--http --http.addr "0.0.0.0" --http.api "eth,net,web3"'

    - name: Install Node.js (16.x)
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
        apt-get install -y nodejs
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Install Hardhat globally
      npm:
        name: hardhat
        global: yes

    - name: Install K3s (Kubernetes lightweight)
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Symlink kubectl for ease of use
      file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/kubectl
        state: link
        force: yes

    - name: Wait for Kubernetes API to become available
      shell: |
        for i in {1..20}; do
          kubectl get nodes && exit 0
          echo "Waiting for Kubernetes API..."
          sleep 15
        done
        exit 1
      register: kube_ready
      retries: 3
      delay: 10
      until: kube_ready.rc == 0

    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Add HashiCorp Helm repo
      shell: helm repo add hashicorp https://helm.releases.hashicorp.com

    - name: Update Helm repos
      shell: helm repo update

    - name: Create vault namespace
      shell: kubectl create namespace vault --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy Vault via Helm (Dev Mode)
      shell: helm install vault hashicorp/vault --namespace vault --set "server.dev.enabled=true"
      register: vault_result
      retries: 3
      delay: 15
      until: vault_result.rc == 0
