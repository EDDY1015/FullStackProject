name: Terraform Deployment

on:
  push:
    branches:
      - master
  delete:
    branches:
      - master

jobs:
  terraform_and_ansible:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify Terraform Directory
        run: test -d terraform && echo "Directory exists" || (echo "Terraform directory missing!" && exit 1)

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Retrieve EC2 Public IP
        run: |
          echo "Retrieving EC2 Public IP..."
          EC2_IP=$(terraform output -raw geth_public_ip)
          if [ -z "$EC2_IP" ]; then
            echo "ERROR: geth_public_ip is empty!"
            exit 1
          fi
          echo "EC2_PUBLIC_IP=$EC2_IP" >> $GITHUB_ENV
          echo "✅ EC2 Public IP: $EC2_IP"
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      # ANSIBLE STEPS
      - name: Install SSH & Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible openssh-client

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | sed 's/\r$//' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_PUBLIC_IP >> ~/.ssh/known_hosts

      - name: Verify SSH Connection
        run: |
          echo "Testing SSH connection to EC2..."
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP "echo '✅ SSH Connection Successful'"

      - name: Generate Dynamic Ansible Inventory
        run: |
          echo "[ethereum]" > ansible/inventory.ini
          echo "$EC2_PUBLIC_IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini
          cat ansible/inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/setup.yml

  destroy:
    if: github.event_name == 'delete' && github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Destroy Infrastructure
        run: terraform destroy -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
