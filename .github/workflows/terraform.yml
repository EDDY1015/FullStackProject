name: CI/CD Pipeline for Blockchain Setup

on:
  push:
    branches:
      - master
  delete:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Retrieve EC2 Public IP
        id: ec2_ip
        run: echo "EC2_PUBLIC_IP=$(terraform output -raw geth_public_ip)" >> $GITHUB_ENV
        working-directory: terraform

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SSH & Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible openssh-client

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: **Manually Test SSH Connection**
        run: |
          echo "Testing SSH connection to EC2..."
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_PUBLIC_IP }} "echo 'âœ… SSH Connection Successful'"

      - name: Generate Dynamic Ansible Inventory
        run: |
          echo "[ethereum]" > ansible/inventory.ini
          echo "${{ env.EC2_PUBLIC_IP }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/setup.yml
