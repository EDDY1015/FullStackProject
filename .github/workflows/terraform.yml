name: Terraform & Ansible CI/CD

on:
  push:
    branches:
      - master
  delete:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      EC2_PUBLIC_IP: ${{ steps.get_ip.outputs.ip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Terraform Init & Apply
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Output EC2 Public IP
        id: get_ip
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          IP=$(terraform output -raw geth_public_ip)
          echo "ip=$IP" >> $GITHUB_OUTPUT

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    env:
      EC2_PUBLIC_IP: ${{ needs.terraform.outputs.EC2_PUBLIC_IP }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | sed 's/\r$//' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Strictly Add EC2 IP to known_hosts (critical fix!)
        run: |
          ssh-keyscan -H -t rsa ${{ env.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Debug SSH Connection (optional but recommended)
        run: |
          ssh -vvv -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_PUBLIC_IP }} "echo âœ… SSH Works!"

      - name: Generate Dynamic Inventory File
        run: |
          echo "[ethereum]" > ansible/inventory.ini
          echo "${{ env.EC2_PUBLIC_IP }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini

      - name: Wait for SSH (Ansible)
        run: |
          ansible -i ansible/inventory.ini ethereum -m wait_for_connection -a "timeout=180"

      - name: Run Ansible Playbook
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ansible/inventory.ini ansible/setup.yml

  destroy:
    if: github.event_name == 'delete' && github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Terraform Destroy
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform destroy -auto-approve
