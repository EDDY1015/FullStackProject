name: CI/CD Pipeline for Blockchain Setup

on:
  push:
    branches:
      - master
  delete:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify Terraform Directory
        run: test -d terraform && echo "Directory exists" || (echo "Terraform directory missing!" && exit 1)

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          echo "Waiting for Terraform to output EC2 public IP..."
          sleep 10  # Delay to ensure Terraform applies completely
          terraform output
          EC2_PUBLIC_IP=$(terraform output -raw geth_public_ip 2>/dev/null || echo "")
          if [ -z "$EC2_PUBLIC_IP" ]; then
            echo "ERROR: Terraform did not return an EC2 public IP."
            exit 1
          fi
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV
          echo "âœ… EC2 Public IP: $EC2_PUBLIC_IP"
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update && sudo apt install -y ansible

      - name: Update Ansible Inventory with EC2 IP
        run: |
          echo "[ethereum]" > ansible/inventory.ini
          echo "${{ env.EC2_PUBLIC_IP }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini

      - name: Set Up SSH Key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/setup.yml

  destroy:
    if: github.event_name == 'delete' && github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.5

      - name: Destroy Infrastructure
        run: terraform destroy -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
